{"version":3,"sources":["components/Form/Form.js","components/Filter/Filter.js","components/ContactsListElement/ContactsListElement.js","components/Contacts/Contacts.js","App.js","index.js"],"names":["Form","nameId","uuidv1","numberId","state","name","number","inputChange","e","target","value","setState","submit","preventDefault","props","onSubmit","reset","className","this","htmlFor","id","type","pattern","title","required","autoComplete","onChange","Component","Filter","ContactsListElement","Contacts","names","map","el","App","filterFieldId","contacts","filter","obj","find","contact","alert","prevState","console","log","filtredNames","toLowerCase","includes","toLocaleLowerCase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f14a0e80.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { v1 as uuidv1 } from 'uuid';\n\nclass Form extends Component {\n  nameId = uuidv1();\n  numberId = uuidv1();\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  inputChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  submit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    return this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <form className=\"form\" onSubmit={this.submit}>\n        <label className=\"label\" htmlFor={this.nameId}>\n          Name\n        </label>\n        <input\n          id={this.nameId}\n          className=\"input\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов.\n            Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          autoComplete=\"off\"\n          value={this.state.name}\n          onChange={this.inputChange}\n        />\n\n        <label className=\"label\" htmlFor={this.numberId}>\n          Number\n        </label>\n        <input\n          id={this.numberId}\n          className=\"input\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, \n            круглые скобки и может начинаться с +\"\n          required\n          autoComplete=\"off\"\n          value={this.state.number}\n          onChange={this.inputChange}\n        />\n\n        <button className=\"button\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","function Filter(props) {\n  return (\n    <>\n      <label className=\"label\" htmlFor={props.id}>\n        Find contacts by name\n      </label>\n\n      <input\n        id={props.id}\n        className=\"input\"\n        name=\"filter\"\n        type=\"text\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Введите имя которое ищите\"\n        autoComplete=\"off\"\n        value={props.value}\n        onChange={props.onChange}\n      />\n    </>\n  );\n}\n\nexport default Filter;\n","function ContactsListElement(props) {\n  return (\n    <li className=\"listItem\" key={props.id}>\n      {/* {console.log(props.id)} // uniqe key */}\n      <span className=\"name\">{props.name}:</span> {props.number}\n      <button className=\"deleteBtn\" type=\"button\">\n        Delete\n      </button>\n    </li>\n  );\n}\n\nexport default ContactsListElement;\n","import ContactsListElement from '../ContactsListElement';\n\nfunction Contacts({ names }) {\n  return (\n    <ul className=\"list\">\n      {names().map(el => {\n        return (\n          <ContactsListElement id={el.id} name={el.name} number={el.number} />\n          // <li className=\"listItem\" key={el.id}>\n          //   <span className=\"name\">{el.name}:</span> {el.number}\n          //   <button className=\"deleteBtn\" type=\"button\">\n          //     Delete\n          //   </button>\n          // </li>\n        );\n      })}\n    </ul>\n  );\n}\nexport default Contacts;\n","import { Component } from 'react';\nimport { v1 as uuidv1 } from 'uuid';\nimport './App.css';\nimport Form from './components/Form';\nimport Filter from './components/Filter';\nimport Contacts from './components/Contacts';\n\nclass App extends Component {\n  filterFieldId = uuidv1();\n\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  inputChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  submit = obj => {\n    const existContact = this.state.contacts.find(contact => {\n      return contact.name === obj.name;\n    });\n\n    if (existContact) {\n      return alert(`${obj.name} is already in contacts`);\n    }\n\n    this.setState(\n      prevState => ({\n        contacts: [\n          {\n            id: uuidv1(),\n            ...obj,\n          },\n          ...prevState.contacts,\n        ],\n      }),\n      () => {\n        console.log(this.state.contacts); // all contacts has id\n      },\n    );\n  };\n\n  filtredNames = () => {\n    return this.state.contacts.filter(contact => {\n      if (\n        contact.name\n          .toLowerCase()\n          .includes(this.state.filter.toLocaleLowerCase())\n      ) {\n        return contact;\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"wrapper\">\n          <h2>Phonebook</h2>\n          <Form onChange={this.inputChange} onSubmit={this.submit} />\n        </div>\n\n        <div className=\"wrapper\">\n          <h2>Contacts</h2>\n          <Filter\n            id={this.filterFieldId}\n            value={this.state.filter}\n            onChange={this.inputChange}\n          />\n          <Contacts names={this.filtredNames} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}